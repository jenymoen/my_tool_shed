rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is the owner
    function isOwner(data) {
      return isAuthenticated() && request.auth.uid == data.ownerId;
    }
    
    // Allow authenticated users to read and write tool ratings
    match /tool_ratings/{ratingId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && 
        (request.auth.uid == resource.data.raterId || 
         request.auth.uid == resource.data.ownerId);
    }
    
    // Allow authenticated users to read and write tools
    match /tools/{toolId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (
        // Allow if user is the owner
        request.auth.uid == resource.data.ownerId ||
        // Or if the update only changes sharing settings and user is the owner
        (request.auth.uid == request.resource.data.ownerId &&
         request.resource.data.diff(resource.data).affectedKeys()
           .hasOnly(['isAvailableForCommunity', 'allowedBorrowers', 'requiresApproval']))
      );
      allow delete: if isAuthenticated() && request.auth.uid == resource.data.ownerId;
    }
    
    // Allow authenticated users to read and write community members
    match /community_members/{memberId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && request.auth.uid == memberId;
    }
  }
} 